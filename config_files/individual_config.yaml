# Base directory of input data
input_dir: "data/inputs"

# Base directory to save outputs
output_dir: "data/outputs"

# Directory of multilayer networks to analyze for community structure
networks_dir: "eeg/error"

# Multilayer networks whose community structure will be found:
#
#   - network: The name of multilayer network file without extension. The runner will check 
#              '{input_dir}/{networks_dir}' for a file named '{network}.gml' or '{network}.gml.gz'. 
#      
networks: 
    - network: "subject_1"

    # - network: "subject_2"

    # - network: "subject_3"

    # - network: "subject_4"

    # - network: "subject_5"

    # - network: "subject_6"

    # - network: "subject_7"

    # - network: "subject_8"

    # - network: "subject_9"

    # - network: "subject_10"

    # - network: "subject_11"

    # - network: "subject_12"

    # - network: "subject_13"

    # - network: "subject_14"

    # - network: "subject_15"

    # - network: "subject_16"

    # - network: "subject_17"

    # - network: "subject_18"

    # - network: "subject_19"

    # - network: "subject_20"

# The type of null networks to create. For each network listed above, 
# the runner will first check '{output_dir}/{networks_dir}/{network}' to see 
# if there is a folder named '{null_networks_type}'. If there is a folder with 
# already created null networks, the runner will use these null networks. 
# Thus, if you have already generated null networks and do not want the runner 
# to create new null networks, put those nulls in a folder under 
# '{output_dir}/{networks_dir}/{network}' and give the name of the folder 
# as input. TODO: Give possible input values
null_networks_type: "strength_and_layer_preserved"

# Type of the null model to use in modularity definition
# It can be either "configuration" or "erdos-renyi"
null_model: "erdosrenyi"

# Resolution parameter
# TODO: Describe min, max, num_points
gamma:
    - min: 1.0
    - max: 1.1
    - n_points: 1

# Interlayer scaling 
# TODO: Describe min, max, num_points
omega:
    - min: 1.0
    - max: 1.0
    - n_points: 1

# Number of times to run modularity for each network
n_runs: 100

# If true runner will print information about where it is
verbose: True